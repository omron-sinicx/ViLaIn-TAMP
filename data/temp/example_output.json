{"prompt": "Detect objects and output the bounding boxes in the form of [xmin, ymin, xmax, ymax]. The objects to detect are:\n- 'cucumber': a regular cucumber.\n- 'carrot': a regular carrot with a green stem.\n- 'apple': a regular apple, but might look like tomato\n- 'plate': a flat plate. The color is light red or light green.\n- 'bowl': a white, deep bowl.\n- 'cutting_board': a square, wooden cutting board with light natural wood color.. Output the results in JSON format where the key is an object name in string and the value is the bounding box (e.g., { \"cucumber\": [x1, y1, x2, y2], \"plate\": [x1, y1, x2, y2], ...}). If multiple objects are detected for a single object type, add a number to the object name incrementally from the second object (e.g., plate, plate2, plate3, ...). Objects that do not appear in the image must not be included in the output.", "result": "(:objects\n    a_bot b_bot - Robot\n    cucumber - PhysicalObject\n    knife - Tool\n    cutting_board tray plate knife_holder - Location\n)", "bboxes": [["knife_holder", [406.89666666666665, 363.7155555555555, 456.12666666666667, 403.37185185185183]], ["tray", [236.12666666666667, 501.8370370370371, 383.05, 634.482962962963]], ["knife", [373.82, 363.7155555555555, 456.12666666666667, 393.80148148148146]], ["cutting_board", [292.28333333333336, 363.7155555555555, 359.97333333333336, 425.2562962962963]], ["cucumber", [265.36, 503.2, 306.89666666666665, 627.6444444444445]], ["a_bot", [1.5133333333333334, 1.3214814814814815, 212.2833333333333, 514.1451851851853]], ["bowl", [317.66666666666663, 518.2459259259259, 371.5133333333333, 609.8666666666667]], ["b_bot", [433.05, 76.53333333333333, 635.3599999999999, 564.7407407407408]]]}